import pygame
import random

# Initialize Pygame
pygame.init()

# Set up the screen
screen_width = 500
screen_height = 600
screen = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption("2048 Game")

# Define colors
white = (255, 255, 255)
black = (0, 0, 0)
gray = (128, 128, 128)
red = (255, 0, 0)
green = (0, 255, 0)
blue = (0, 0, 255)

# Define fonts
font_small = pygame.font.SysFont("Arial", 20)
font_medium = pygame.font.SysFont("Arial", 30)
font_large = pygame.font.SysFont("Arial", 40)

# Define game variables
tile_size = 100
tile_margin = 10
grid_size = 4
grid = [[0 for x in range(grid_size)] for y in range(grid_size)]
score = 0

# Define functions
def draw_tile(x, y, value):
    if value == 0:
        color = gray
    elif value == 2:
        color = white
    elif value == 4:
        color = blue
    elif value == 8:
        color = green
    else:
        color = red
    pygame.draw.rect(screen, color, (x, y, tile_size, tile_size))
    if value != 0:
        font = font_medium if value < 100 else font_small
        text = font.render(str(value), True, black)
        text_rect = text.get_rect(center=(x + tile_size / 2, y + tile_size / 2))
        screen.blit(text, text_rect)

def draw_grid():
    for row in range(grid_size):
        for col in range(grid_size):
            x = col * tile_size + (col + 1) * tile_margin
            y = row * tile_size + (row + 1) * tile_margin
            value = grid[row][col]
            draw_tile(x, y, value)

def add_tile():
    empty_tiles = [(row, col) for row in range(grid_size) for col in range(grid_size) if grid[row][col] == 0]
    if empty_tiles:
        row, col = random.choice(empty_tiles)
        grid[row][col] = 2

def move_tiles(direction):
    global score
    if direction == "up":
        for col in range(grid_size):
            for row in range(1, grid_size):
                if grid[row][col] != 0:
                    value = grid[row][col]
                    i = row - 1
                    while i >= 0 and grid[i][col] == 0:
                        i -= 1
                    if i >= 0 and grid[i][col] == value:
                        grid[i][col] *= 2
                        score += grid[i][col]
                        grid[row][col] = 0
                    else:
                        grid[row][col] = 0
                        grid[i + 1][col] = value
    elif direction == "down":
        for col in range(grid_size):
            for row in range(grid_size - 2, -1, -1):
                if grid[row][col] != 0:
                    value = grid[row][col]
                    i = row + 1
                    while i < grid_size and grid[i][col] == 0:
                        i += 1
                    if i < grid_size and grid[i][col] == value:
                        grid[i][col] *= 2
                        score += grid[i][col]
                        grid[row][col] = 0
                    else:
                        grid[row][col] = 0
                        grid[i - 1][col] = value
    elif direction == "left":
        for row in range(grid_size):
            for col in range(1, grid_size):
                if grid[row][col] != 0:
                    value = grid[row][col]
                    i = col - 1
                    while i >= 0 and grid[row][i] == 0:
                        i -= 1
                    if i >= 0 and grid[row][i] == value:
                        grid[row][i] *= 2
                        score += grid[row][i]
                        grid[row][col] = 0
                    else:
                        grid[row][col] = 0
                        grid[row][i + 1] = value
    elif direction == "right":
        for row in range(grid_size):
            for col in range(grid_size - 2, -1, -1):
                if grid[row][col] != 0:
                    value = grid[row][col]
                    i = col + 1
                    while i < grid_size and grid[row][i] == 0:
                        i += 1
                    if i < grid_size and grid[row][i] == value:
                        grid[row][i] *= 2
                        score += grid[row][i]
                        grid[row][col] = 0
                    else:
                        grid[row][col] = 0
                        grid[row][i - 1] = value

def is_game_over():
    for row in range(grid_size):
        for col in range(grid_size):
            if grid[row][col] == 0:
                return False
            if col < grid_size - 1 and grid[row][col] == grid[row][col + 1]:
                return False
            if row < grid_size - 1 and grid[row][col] == grid[row + 1][col]:
                return False
    return True

# Add initial tiles
add_tile()
add_tile()

# Game loop
running = True
while running:
    # Handle events
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP:
                move_tiles("up")
                add_tile()
            elif event.key == pygame.K_DOWN:
                move_tiles("down")
                add_tile()
            elif event.key == pygame.K_LEFT:
                move_tiles("left")
                add_tile()
            elif event.key == pygame.K_RIGHT:
                move_tiles("right")
                add_tile()

    # Draw the screen
    screen.fill(black)
    draw_grid()
    score_text = font_large.render("Score: " + str(score), True, white)
    screen.blit(score_text, (10, screen_height - 50))
    if is_game_over():
        game_over_text = font_large.render("Game Over", True, black)
        screen.blit(game_over_text, (screen_width / 2 - game_over_text.get_width() / 2, screen_height / 2 - game_over_text.get_height() / 2))
    pygame.display.update()

# Quit Pygame
pygame.quit()
